{"ast":null,"code":"import axios from 'axios';\nimport { ITINERARY_REQUEST, ITINERARY_REQUEST_SUCCESS, ITINERARY_REQUEST_FAIL } from '../types/ItinerariesTypes';\nexport const getItinerary = values => async dispatch => {\n  console.log(values);\n  dispatch({\n    type: ITINERARY_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"https://api.digitransit.fi/routing/v1/routers/finland/index/graphql\", {\n      query: `{\n                  plan(\n                   \n                    fromPlace: \"Kamppi, Helsinki::60.168992,24.932366\",\n                    toPlace: \"Pisa, Espoo::60.175294,24.684855\",\n                    numItineraries: 5,\n                    transportModes: [{mode: BUS}, {mode: RAIL}, {mode:TRAM}, {mode: FERRY}, {mode:WALK}]\n                    walkReluctance: 2.1,\n                    walkBoardCost: 300,\n                    minTransferTime: 600,\n                    walkSpeed: 1.7,\n                  ) {\n                    itineraries{\n                      walkDistance\n                      duration\n                      legs {\n                        mode\n                        startTime\n                        endTime\n                        from {\n                          lat\n                          lon\n                          name\n                          stop {\n                            code\n                            name\n                          }\n                        }\n                        to {\n                          lat\n                          lon\n                          name\n                          stop {\n                            code\n                            name\n                          }\n                        }\n                        trip {\n                          tripHeadsign\n                          routeShortName\n                        }\n                        distance\n                        legGeometry {\n                          length\n                          points\n                        }\n                      }\n                    }\n                  }\n                }`\n    });\n    dispatch({\n      type: ITINERARY_REQUEST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ITINERARY_REQUEST_FAIL,\n      payload: error ? error : \"nothing\"\n    });\n  }\n};","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/redux/actions/ItinerariesAction.js"],"names":["axios","ITINERARY_REQUEST","ITINERARY_REQUEST_SUCCESS","ITINERARY_REQUEST_FAIL","getItinerary","values","dispatch","console","log","type","data","post","query","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,yBAFF,EAGEC,sBAHF,QAIO,2BAJP;AAOA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,IAAN,CAAW,qEAAX,EAErB;AACEC,MAAAA,KAAK,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDM,KAFqB,CAAvB;AAwDAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,yBADC;AAEPW,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GA7DD,CA6DE,OAAOI,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,sBADC;AAEPU,MAAAA,OAAO,EAAEC,KAAK,GAAGA,KAAH,GAAW;AAFlB,KAAD,CAAR;AAID;AACF,CAzEM","sourcesContent":["import axios from 'axios'\nimport {\n  ITINERARY_REQUEST,\n  ITINERARY_REQUEST_SUCCESS,\n  ITINERARY_REQUEST_FAIL\n} from '../types/ItinerariesTypes'\n\n\nexport const getItinerary = (values) => async (dispatch) => {\n  console.log(values)\n  dispatch({\n    type: ITINERARY_REQUEST\n  })\n\n  try {\n    const { data } = await axios.post(\"https://api.digitransit.fi/routing/v1/routers/finland/index/graphql\",\n   \n      {\n        query: `{\n                  plan(\n                   \n                    fromPlace: \"Kamppi, Helsinki::60.168992,24.932366\",\n                    toPlace: \"Pisa, Espoo::60.175294,24.684855\",\n                    numItineraries: 5,\n                    transportModes: [{mode: BUS}, {mode: RAIL}, {mode:TRAM}, {mode: FERRY}, {mode:WALK}]\n                    walkReluctance: 2.1,\n                    walkBoardCost: 300,\n                    minTransferTime: 600,\n                    walkSpeed: 1.7,\n                  ) {\n                    itineraries{\n                      walkDistance\n                      duration\n                      legs {\n                        mode\n                        startTime\n                        endTime\n                        from {\n                          lat\n                          lon\n                          name\n                          stop {\n                            code\n                            name\n                          }\n                        }\n                        to {\n                          lat\n                          lon\n                          name\n                          stop {\n                            code\n                            name\n                          }\n                        }\n                        trip {\n                          tripHeadsign\n                          routeShortName\n                        }\n                        distance\n                        legGeometry {\n                          length\n                          points\n                        }\n                      }\n                    }\n                  }\n                }`\n      }\n    )\n\n    dispatch({\n      type: ITINERARY_REQUEST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: ITINERARY_REQUEST_FAIL,\n      payload: error ? error : \"nothing\"\n    })\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}