{"ast":null,"code":"var _jsxFileName = \"/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/InputScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAddress } from \"../../redux/actions/AddressCompAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputScreen = () => {\n  _s();\n\n  const [firstAddress, setFirstAddress] = useState();\n  const [secondAddress, setSecondAddress] = useState();\n  const [departure, setDeparture] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    time: new Date().toLocaleTimeString().slice(0, 7)\n  });\n  const dispatch = useDispatch();\n\n  const onChangeHandler1 = value => {\n    setFirstAddress(value);\n  };\n\n  const onChangeHandler2 = value => {\n    setSecondAddress(value);\n  };\n\n  useEffect(() => {\n    let vaules = {\n      firstAddress,\n      secondAddress,\n      departure\n    };\n    dispatch(getAddress(vaules));\n  }, [dispatch, firstAddress, secondAddress, departure]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => onChangeHandler1(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => onChangeHandler2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Find best Option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputScreen, \"F/vHFdiBNpDdiy2js/bbBChcHuw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputScreen;\nexport default InputScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputScreen\");","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/InputScreen.js"],"names":["React","useState","useEffect","useDispatch","getAddress","InputScreen","firstAddress","setFirstAddress","secondAddress","setSecondAddress","departure","setDeparture","date","Date","toISOString","slice","time","toLocaleTimeString","dispatch","onChangeHandler1","value","onChangeHandler2","vaules","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA2B,aAA3B;AACA,SAASC,UAAT,QAA2B,uCAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,EAAlD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACvCW,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CADiC;AAEvCC,IAAAA,IAAI,EAAC,IAAIH,IAAJ,GAAWI,kBAAX,GAAgCF,KAAhC,CAAsC,CAAtC,EAAyC,CAAzC;AAFkC,GAAD,CAA1C;AAMA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;;AAGA,QAAMgB,gBAAgB,GAAIC,KAAD,IAAW;AAChCb,IAAAA,eAAe,CAACa,KAAD,CAAf;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAID,KAAD,IAAW;AAChCX,IAAAA,gBAAgB,CAACW,KAAD,CAAhB;AACH,GAFD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,MAAM,GAAG;AACThB,MAAAA,YADS;AAETE,MAAAA,aAFS;AAGTE,MAAAA;AAHS,KAAb;AAKAQ,IAAAA,QAAQ,CAACd,UAAU,CAACkB,MAAD,CAAX,CAAR;AAEH,GARQ,EAQN,CAACJ,QAAD,EAAWZ,YAAX,EAAyBE,aAAzB,EAAwCE,SAAxC,CARM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGa,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGG,CAAD,IAAOF,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;GAAMf,W;UASeF,W;;;KATfE,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {useDispatch } from 'react-redux'\nimport { getAddress } from \"../../redux/actions/AddressCompAction\"\n\nconst InputScreen = () => {\n    const [firstAddress, setFirstAddress] = useState()\n    const [secondAddress, setSecondAddress] = useState()\n    const [departure, setDeparture] = useState({\n        date: new Date().toISOString().slice(0, 10),\n        time:new Date().toLocaleTimeString().slice(0, 7)\n    })\n\n\n    const dispatch = useDispatch()\n\n\n    const onChangeHandler1 = (value) => {\n        setFirstAddress(value)\n    }\n    const onChangeHandler2 = (value) => {\n        setSecondAddress(value)\n    }\n\n\n    useEffect(() => {\n        let vaules = {\n            firstAddress,\n            secondAddress,\n            departure\n        }\n        dispatch(getAddress(vaules))\n\n    }, [dispatch, firstAddress, secondAddress, departure])\n\n\n    return (\n        <div className=\"input-layout\">\n            <input type=\"text\" onChange={(e) => onChangeHandler1(e.target.value)} />\n            <input type=\"text\" onChange={(e) => onChangeHandler2(e.target.value)} />\n            <button>Find best Option</button>\n        </div>\n    )\n}\n\nexport default InputScreen\n"]},"metadata":{},"sourceType":"module"}