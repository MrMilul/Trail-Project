{"ast":null,"code":"var _jsxFileName = \"/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/TimetableScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItinerary } from '../../redux/actions/ItinerariesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimetableScreen = () => {\n  _s();\n\n  const [originLatLan, setOriginLatLon] = useState({});\n  const [destinationLatLan, setDestinationLatLon] = useState({});\n  const bigData = useSelector(state => state.addressReducer);\n  const {\n    loading,\n    data,\n    error,\n    departureTime,\n    departureDate\n  } = bigData;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (Object.keys(bigData) > 1) {\n      setOriginLatLon({\n        name: data[0].data.features[0].properties.name,\n        locality: data[0].data.features[0].properties.locality,\n        lon: data[0].data.features[0].geometry.coordinates[0],\n        lat: data[0].data.features[0].geometry.coordinates[1]\n      });\n      setDestinationLatLon({\n        name: data[1].data.features[0].properties.name,\n        locality: data[1].data.features[0].properties.locality,\n        lon: data[1].data.features[0].geometry.coordinates[0],\n        lat: data[1].data.features[0].geometry.coordinates[1]\n      });\n    }\n  }, [bigData]);\n\n  const clickHandler = () => {//     setOriginLatLon({\n    //         name:data[0].data.features[0].properties.name,\n    //         locality:data[0].data.features[0].properties.locality,\n    //         lon: data[0].data.features[0].geometry.coordinates[0],\n    //         lat: data[0].data.features[0].geometry.coordinates[1]\n    //     })\n    //     setDestinationLatLon({\n    //         name:data[1].data.features[0].properties.name,\n    //         locality:data[1].data.features[0].properties.locality,\n    //         lon: data[1].data.features[0].geometry.coordinates[0],\n    //         lat: data[1].data.features[0].geometry.coordinates[1]\n    //     })\n  };\n\n  const clickHandler1 = () => {\n    console.log(originLatLan);\n    console.log(destinationLatLan);\n    console.log(departureTime);\n    console.log(departureDate);\n  };\n\n  const clickHandler2 = () => {//  dispatch(getItinerary())\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"finde\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler1,\n      children: \"log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler2,\n      children: \"fetch graphql\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimetableScreen, \"ZidgS+kgESYrGm28m7MiqqZ+OjM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TimetableScreen;\nexport default TimetableScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimetableScreen\");","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/TimetableScreen.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getItinerary","TimetableScreen","originLatLan","setOriginLatLon","destinationLatLan","setDestinationLatLon","bigData","state","addressReducer","loading","data","error","departureTime","departureDate","dispatch","Object","keys","name","features","properties","locality","lon","geometry","coordinates","lat","clickHandler","clickHandler1","console","log","clickHandler2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getItinerary } from '../../redux/actions/ItinerariesAction'\n\nconst TimetableScreen = () => {\n    const [originLatLan, setOriginLatLon] = useState({})\n    const [destinationLatLan, setDestinationLatLon] = useState({})\n\n    const bigData = useSelector(state => state.addressReducer)\n    const { loading, data, error, departureTime, departureDate } = bigData\n\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (Object.keys(bigData) > 1) {\n            setOriginLatLon({\n                name: data[0].data.features[0].properties.name,\n                locality: data[0].data.features[0].properties.locality,\n                lon: data[0].data.features[0].geometry.coordinates[0],\n                lat: data[0].data.features[0].geometry.coordinates[1]\n            })\n            setDestinationLatLon({\n                name: data[1].data.features[0].properties.name,\n                locality: data[1].data.features[0].properties.locality,\n                lon: data[1].data.features[0].geometry.coordinates[0],\n                lat: data[1].data.features[0].geometry.coordinates[1]\n            })\n        }\n\n    }, [bigData])\n    const clickHandler = () => {\n        //     setOriginLatLon({\n        //         name:data[0].data.features[0].properties.name,\n        //         locality:data[0].data.features[0].properties.locality,\n        //         lon: data[0].data.features[0].geometry.coordinates[0],\n        //         lat: data[0].data.features[0].geometry.coordinates[1]\n        //     })\n        //     setDestinationLatLon({\n        //         name:data[1].data.features[0].properties.name,\n        //         locality:data[1].data.features[0].properties.locality,\n        //         lon: data[1].data.features[0].geometry.coordinates[0],\n        //         lat: data[1].data.features[0].geometry.coordinates[1]\n        //     })\n\n    }\n    const clickHandler1 = () => {\n        console.log(originLatLan)\n        console.log(destinationLatLan)\n        console.log(departureTime)\n        console.log(departureDate)\n    }\n    const clickHandler2 = () => {\n        //  dispatch(getItinerary())\n\n    }\n    return (\n        <div>\n            <button onClick={clickHandler}>finde</button>\n            <button onClick={clickHandler1}>log</button>\n            <button onClick={clickHandler2}>fetch graphql</button>\n\n        </div>\n    )\n}\n\nexport default TimetableScreen\n"]},"metadata":{},"sourceType":"module"}