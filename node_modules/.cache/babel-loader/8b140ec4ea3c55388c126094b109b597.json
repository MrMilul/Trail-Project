{"ast":null,"code":"import axios from \"axios\";\nimport { ADDRESS_REQUEST, ADDRESS_REQUEST_SUCCESS, ADDRESS_REQUEST_FAIL } from \"../types/AddressType\";\nexport const getAddress = address => async dispatch => {\n  dispatch({\n    type: ADDRESS_REQUEST\n  });\n\n  try {\n    const reqOne = axios.get(\"https://api.digitransit.fi/geocoding/v1/search?text=kamppi&size=1\");\n    const reqTwo = axios.get(\"https://api.digitransit.fi/geocoding/v1/search?text=Lapinlahdenkatu%2016&size=1\");\n    const { ...data\n    } = await axios.all([reqOne, reqTwo]);\n    dispatch({\n      type: ADDRESS_REQUEST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADDRESS_REQUEST_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/redux/actions/AddressCompAction.js"],"names":["axios","ADDRESS_REQUEST","ADDRESS_REQUEST_SUCCESS","ADDRESS_REQUEST_FAIL","getAddress","address","dispatch","type","reqOne","get","reqTwo","data","all","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,eADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,QAIO,sBAJP;AAOA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAEvDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEN;AADD,GAAD,CAAR;;AAGA,MAAI;AAAC,UAAMO,MAAM,GAAGR,KAAK,CAACS,GAAN,CAAU,mEAAV,CAAf;AACL,UAAMC,MAAM,GAAGV,KAAK,CAACS,GAAN,CAAU,iFAAV,CAAf;AACI,UAAM,EAAE,GAAGE;AAAL,QAAc,MAAMX,KAAK,CAACY,GAAN,CAAU,CAACJ,MAAD,EAASE,MAAT,CAAV,CAA1B;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,uBADD;AAELW,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GATD,CASE,OAAOG,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,oBADD;AAELU,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH;AACJ,CApBM","sourcesContent":["import axios from \"axios\"\n\nimport {\n    ADDRESS_REQUEST,\n    ADDRESS_REQUEST_SUCCESS,\n    ADDRESS_REQUEST_FAIL\n} from \"../types/AddressType\"\n\n\nexport const getAddress = (address) => async (dispatch) => {\n\n    dispatch({\n        type: ADDRESS_REQUEST\n    })\n    try {const reqOne = axios.get(\"https://api.digitransit.fi/geocoding/v1/search?text=kamppi&size=1\");\n    const reqTwo = axios.get(\"https://api.digitransit.fi/geocoding/v1/search?text=Lapinlahdenkatu%2016&size=1\");\n        const { ...data } = await axios.all([reqOne, reqTwo])\n\n        dispatch({\n            type: ADDRESS_REQUEST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ADDRESS_REQUEST_FAIL,\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}