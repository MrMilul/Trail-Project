{"ast":null,"code":"var _jsxFileName = \"/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/InputScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAddress } from \"../../redux/actions/AddressCompAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputScreen = () => {\n  _s();\n\n  const [origin, setOrigen] = useState();\n  const dispatch = useDispatch();\n\n  const onChangeHandler1 = key => {\n    setOrigen(key);\n  };\n\n  useEffect(() => {\n    dispatch(getAddress(key));\n  }, [origin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => onChangeHandler1(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickhandler,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputScreen, \"V9QbzpzIKXnYTmYNKJnt8xLFr/4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputScreen;\nexport default InputScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputScreen\");","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/InputScreen.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAddress","InputScreen","origin","setOrigen","dispatch","onChangeHandler1","key","e","target","value","clickhandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,uCAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;;AACA,QAAMM,gBAAgB,GAAIC,GAAD,IAAO;AAC7BH,IAAAA,SAAS,CAACG,GAAD,CAAT;AACF,GAFD;;AAGFT,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAAEJ,UAAU,CAACM,GAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT;AAGE,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGK,CAAD,IAAKF,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAfD;;GAAMT,W;UAEeF,W;;;KAFfE,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAddress } from \"../../redux/actions/AddressCompAction\"\n\nconst InputScreen = () => {\n    const [origin, setOrigen] = useState()\n    const dispatch = useDispatch()\n    const onChangeHandler1 = (key)=>{\n       setOrigen(key)\n    }\n  useEffect(() => {\n    dispatch( getAddress(key))\n  }, [origin])\n    return (\n        <div className=\"input-layout\">\n            <input type=\"text\" onChange={(e)=>onChangeHandler1(e.target.value)} />\n            <button onClick={clickhandler}>click</button>\n        </div>\n    )\n}\n\nexport default InputScreen\n"]},"metadata":{},"sourceType":"module"}