{"ast":null,"code":"var _jsxFileName = \"/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/TimetableScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItinerary } from '../../redux/actions/ItinerariesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimetableScreen = () => {\n  _s();\n\n  const [originLatLan, setOriginLatLon] = useState({});\n  const [destinationLatLan, setDestinationLatLon] = useState({});\n  const bigData = useSelector(state => state.addressReducer);\n  const {\n    loading,\n    data,\n    error,\n    departureTime,\n    departureDate\n  } = bigData;\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    setOriginLatLon({\n      name: data[0].data.features[0].properties.name,\n      locality: data[0].data.features[0].properties.locality,\n      lon: data[0].data.features[0].geometry.coordinates[0],\n      lat: data[0].data.features[0].geometry.coordinates[1]\n    });\n    setDestinationLatLon({\n      name: data[1].data.features[0].properties.name,\n      locality: data[1].data.features[0].properties.locality,\n      lon: data[1].data.features[0].geometry.coordinates[0],\n      lat: data[1].data.features[0].geometry.coordinates[1]\n    });\n  };\n\n  const clickHandler1 = () => {\n    console.log(originLatLan);\n    console.log(destinationLatLan);\n    console.log(departureTime);\n    console.log(departureDate);\n  };\n\n  const clickHandler2 = () => {//  dispatch(getItinerary())\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"finde\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler1,\n      children: \"log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler2,\n      children: \"fetch graphql\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimetableScreen, \"A+eS93AUWBo01kckitcz2swwXhk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TimetableScreen;\nexport default TimetableScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimetableScreen\");","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Screen/TimetableScreen.js"],"names":["React","useState","useSelector","useDispatch","getItinerary","TimetableScreen","originLatLan","setOriginLatLon","destinationLatLan","setDestinationLatLon","bigData","state","addressReducer","loading","data","error","departureTime","departureDate","dispatch","clickHandler","name","features","properties","locality","lon","geometry","coordinates","lat","clickHandler1","console","log","clickHandler2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getItinerary } from '../../redux/actions/ItinerariesAction'\n\nconst TimetableScreen = () => {\n    const [originLatLan, setOriginLatLon] = useState({})\n    const [destinationLatLan, setDestinationLatLon] = useState({})\n    \n    const bigData = useSelector(state => state.addressReducer)\n    const { loading, data, error, departureTime, departureDate } = bigData\n\n\n    const dispatch = useDispatch()\n    \n\n    const clickHandler = () => {\n        setOriginLatLon({\n            name:data[0].data.features[0].properties.name,\n            locality:data[0].data.features[0].properties.locality,\n            lon: data[0].data.features[0].geometry.coordinates[0],\n            lat: data[0].data.features[0].geometry.coordinates[1]\n        })\n        setDestinationLatLon({\n            name:data[1].data.features[0].properties.name,\n            locality:data[1].data.features[0].properties.locality,\n            lon: data[1].data.features[0].geometry.coordinates[0],\n            lat: data[1].data.features[0].geometry.coordinates[1]\n        })\n  \n    }\n    const clickHandler1 = ()=>{\n        console.log(originLatLan)\n        console.log(destinationLatLan)\n        console.log(departureTime)\n        console.log(departureDate)\n    }\n    const clickHandler2 = ()=>{\n    //  dispatch(getItinerary())\n\n    }\n    return (\n        <div>\n            <button onClick={clickHandler}>finde</button>\n            <button onClick={clickHandler1}>log</button>\n            <button onClick={clickHandler2}>fetch graphql</button>\n\n        </div>\n    )\n}\n\nexport default TimetableScreen\n"]},"metadata":{},"sourceType":"module"}