{"ast":null,"code":"import axios from 'axios';\nimport { ITINERARY_REQUEST, ITINERARY_REQUEST_SUCCESS, ITINERARY_REQUEST_FAIL } from '../types/ItinerariesTypes';\nexport const getItinerary = values => async dispatch => {\n  dispatch({\n    type: ITINERARY_REQUEST\n  }); // try {\n  //     const { data } = await axios.post(\"https://api.digitransit.fi/routing/v1/routers/finland/index/graphql\",\n  //         {\n  //             query: `{\n  //             plan(\n  //               fromPlace: \"${values.originLatLon.name}, ${values.originLatLon.locality}::${values.originLatLon.laoriginLatLant},${vslues.originLatLan.lon}\",\n  //               toPlace: \"Pisa, Espoo::60.175294,24.684855\",\n  //             ) {\n  //               itineraries{\n  //                 walkDistance,\n  //                 duration,\n  //                 legs {\n  //                   mode\n  //                   startTime\n  //                   endTime\n  //                   from {\n  //                     lat\n  //                     lon\n  //                     name\n  //                     stop {\n  //                       code\n  //                       name\n  //                     }\n  //                   },\n  //                   to {\n  //                     lat\n  //                     lon\n  //                     name\n  //                   },\n  //                   agency {\n  //                     gtfsId\n  //                             name\n  //                   },\n  //                   distance\n  //                   legGeometry {\n  //                     length\n  //                     points\n  //                   }\n  //                 }\n  //               }\n  //             }\n  //           }\n  //         )\n  //     }`\n  //         }\n  //     )\n  //     dispatch({\n  //         type: ITINERARY_REQUEST_SUCCESS,\n  //         payload:data\n  //     })\n  // } catch (error) {\n  //     dispatch({\n  //         type: ITINERARY_REQUEST_FAIL,\n  //         payload: error\n  //     })\n  // }\n};","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/redux/actions/ItinerariesAction.js"],"names":["axios","ITINERARY_REQUEST","ITINERARY_REQUEST_SUCCESS","ITINERARY_REQUEST_FAIL","getItinerary","values","dispatch","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,yBAFJ,EAGIC,sBAHJ,QAIO,2BAJP;AAOA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEN;AADD,GAAD,CAAR,CADwD,CAKxD;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhEM","sourcesContent":["import axios from 'axios'\nimport {\n    ITINERARY_REQUEST,\n    ITINERARY_REQUEST_SUCCESS,\n    ITINERARY_REQUEST_FAIL\n} from '../types/ItinerariesTypes'\n\n\nexport const getItinerary = (values) => async (dispatch) => {\n    dispatch({\n        type: ITINERARY_REQUEST\n    })\n\n    // try {\n    //     const { data } = await axios.post(\"https://api.digitransit.fi/routing/v1/routers/finland/index/graphql\",\n\n\n    //         {\n    //             query: `{\n    //             plan(\n    //               fromPlace: \"${values.originLatLon.name}, ${values.originLatLon.locality}::${values.originLatLon.laoriginLatLant},${vslues.originLatLan.lon}\",\n    //               toPlace: \"Pisa, Espoo::60.175294,24.684855\",\n    //             ) {\n    //               itineraries{\n    //                 walkDistance,\n    //                 duration,\n    //                 legs {\n    //                   mode\n    //                   startTime\n    //                   endTime\n    //                   from {\n    //                     lat\n    //                     lon\n    //                     name\n    //                     stop {\n    //                       code\n    //                       name\n    //                     }\n    //                   },\n    //                   to {\n    //                     lat\n    //                     lon\n    //                     name\n    //                   },\n    //                   agency {\n    //                     gtfsId\n    //                             name\n    //                   },\n    //                   distance\n    //                   legGeometry {\n    //                     length\n    //                     points\n    //                   }\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         )\n    //     }`\n    //         }\n    //     )\n\n    //     dispatch({\n    //         type: ITINERARY_REQUEST_SUCCESS,\n    //         payload:data\n    //     })\n    // } catch (error) {\n    //     dispatch({\n    //         type: ITINERARY_REQUEST_FAIL,\n    //         payload: error\n    //     })\n    // }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}