{"ast":null,"code":"var _jsxFileName = \"/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { getAddress } from '../redux/actions/AddressCompAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const bigData = useSelector(state => state.addressReducer);\n  let {\n    loading,\n    data,\n    error\n  } = bigData; // let items;\n  // if(bigData){\n  //     items = data.\n  // }\n\n  const items = [{\n    id: 0,\n    name: 'Cobol'\n  }, {\n    id: 1,\n    name: 'JavaScript'\n  }, {\n    id: 2,\n    name: 'Basic'\n  }, {\n    id: 3,\n    name: 'PHP'\n  }, {\n    id: 4,\n    name: 'Java'\n  }];\n\n  const handleOnSearch = (string, results) => {\n    dispatch(getAddress(string));\n  };\n\n  const handleOnSelect = result => {\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n      items: items,\n      onSearch: handleOnSearch,\n      placeholder: \"origin\" // onHover={handleOnHover}\n      ,\n      onSelect: handleOnSelect // onFocus={handleOnFocus}\n      ,\n      autoFocus: true,\n      showIcon: false // formatResult={formatResult}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"eVqaq0dr0dzfZuktHCaGNSf5ftM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mrmilul/Documents/WebProg/trial assignment/trail/src/components/Home.js"],"names":["React","useDispatch","useSelector","ReactSearchAutocomplete","getAddress","Home","dispatch","bigData","state","addressReducer","loading","data","error","items","id","name","handleOnSearch","string","results","handleOnSelect","result","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,UAAT,QAA2B,oCAA3B;;;AAMA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA3B;AACA,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAyBL,OAA7B,CAJe,CAKf;AACA;AACA;AACA;;AAEA,QAAMM,KAAK,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADU,EAKV;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALU,EASV;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATU,EAaV;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAbU,EAiBV;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAjBU,CAAd;;AAuBA,QAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACxCZ,IAAAA,QAAQ,CAACF,UAAU,CAACa,MAAD,CAAX,CAAR;AACH,GAFD;;AAGA,QAAME,cAAc,GAAIC,MAAD,IAAY;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,uBAAD;AACI,MAAA,KAAK,EAAEP,KADX;AAEI,MAAA,QAAQ,EAAEG,cAFd;AAGI,MAAA,WAAW,EAAC,QAHhB,CAII;AAJJ;AAKI,MAAA,QAAQ,EAAEG,cALd,CAMI;AANJ;AAOI,MAAA,SAAS,MAPb;AAQI,MAAA,QAAQ,EAAE,KARd,CASA;;AATA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtDD;;GAAMd,I;UAEeJ,W,EACDC,W;;;KAHdG,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\n\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport { getAddress } from '../redux/actions/AddressCompAction'\n\n\n\n\n\nconst Home = () => {\n\n    const dispatch = useDispatch()\n    const bigData = useSelector(state => state.addressReducer)\n    let {loading, data, error} = bigData\n    // let items;\n    // if(bigData){\n    //     items = data.\n    // }\n   \n    const items = [\n        {\n            id: 0,\n            name: 'Cobol'\n        },\n        {\n            id: 1,\n            name: 'JavaScript'\n        },\n        {\n            id: 2,\n            name: 'Basic'\n        },\n        {\n            id: 3,\n            name: 'PHP'\n        },\n        {\n            id: 4,\n            name: 'Java'\n        }\n    ]\n\n    const handleOnSearch = (string, results) => {\n        dispatch(getAddress(string))\n    }\n    const handleOnSelect = (result) => {\n        console.log(result)\n    }\n    return (\n        <div className=\"container\">\n            <ReactSearchAutocomplete\n                items={items}\n                onSearch={handleOnSearch}\n                placeholder=\"origin\"\n                // onHover={handleOnHover}\n                onSelect={handleOnSelect}\n                // onFocus={handleOnFocus}\n                autoFocus\n                showIcon={false}\n            // formatResult={formatResult}\n            />\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}